library(tidyverse)
library(here)
library(conflicted)

conflict_prefer("here", "here")

rooms <- c(1, 2, 1, 1, NA, 3, 1, 3, 2, 1, 1, 8, 3, 1, NA, 1)
new_rooms <- na.omit(rooms)
median(rooms, na.rm = TRUE)
length(new_rooms[new_rooms > 2])

interviews <- read_csv(here("data", "SAFI_clean.csv"), na = "NULL")

head(interviews)
class(interviews)
dim(interviews)
nrow(interviews)
ncol(interviews)
tail(interviews)
names(interviews)
str(interviews)
summary(interviews)
glimpse(interviews)

interviews[1, 1]
interviews[1, 6]
interviews[[1]]
interviews[1]
interviews[1:3, 7]
interviews[3, ]
interviews[, -1]
interviews[-c(7:131), ]
interviews$village
interviews["village"]

interviews_100 <- interviews[100, ]
nrow(interviews)
interviews[131, ]
interviews[nrow(interviews), ]
tail(interviews)
interviews_last <- interviews[131, ]
median(interviews$key_ID)
interviews_middle <- interviews[median(interviews$key_ID), ]
interviews_head <- interviews[-c(7:nrow(interviews)), ]

respondent_floor_type <- factor(c("earth", "cement", "cement", "earth"))
levels(respondent_floor_type)
nlevels(respondent_floor_type)
respondent_floor_type <- factor(respondent_floor_type, 
                                 levels = c("earth", "cement"))
levels(respondent_floor_type)[2] <- "brick"
levels(respondent_floor_type)

respondent_floor_type_ordered <- factor(respondent_floor_type, 
                                        ordered = TRUE)
respondent_floor_type_ordered 

as.character(respondent_floor_type)
year_fct <- factor(c(1990, 1983, 1977, 1998, 1990))
as.numeric(year_fct)   
as.numeric(as.character(year_fct))
as.numeric(levels(year_fct))[year_fct]

memb_assoc <- interviews$memb_assoc
memb_assoc <- as.factor(memb_assoc)
plot(memb_assoc)

memb_assoc <- interviews$memb_assoc
memb_assoc[is.na(memb_assoc)] <- "undetermined"
memb_assoc <- as.factor(memb_assoc)
levels(memb_assoc)
memb_assoc
plot(memb_assoc)

levels(memb_assoc)[1] <- "No"
levels(memb_assoc)[2] <- "Undetermined"
levels(memb_assoc)[3] <- "Yes"
levels(memb_assoc) <- c("No", "Undetermined", "Yes")
levels(memb_assoc)
memb_assoc <- factor(memb_assoc, levels = c("No", "Yes", "Undetermined"), ordered = T)
plot(memb_assoc)

str(interviews)

library(lubridate)

dates <- interviews$interview_date
str(dates)
interviews$day <- day(dates)
interviews$month <- month(dates)
interviews$year <- year(dates)

char_dates <- c("7/31/2012", "8/9/2014", "4/30/2016")
str(char_dates)
as_date(char_dates, format = "%m/%d/%Y")
mdy(char_dates)


## Data Wrangling with dplyr and tidyr

interviews <- read_csv(here("data", "SAFI_clean.csv"), na = "NULL")

# to select columns throughout the dataframe
select(interviews, village, no_membrs, months_lack_food)
# to do the same thing with subsetting
interviews[c("village","no_membrs","months_lack_food")]
# to select a series of connected columns
select(interviews, village:respondent_wall_type)

# filters observations where village name is "Chirodzo" 
filter(interviews, village == "Chirodzo")

# filters observations with "and" operator (comma)
# output dataframe satisfies ALL specified conditions
filter(interviews, village == "Chirodzo", 
                   rooms > 1, 
                   no_meals > 2)

# filters observations with "&" logical operator
# output dataframe satisfies ALL specified conditions
filter(interviews, village == "Chirodzo" & 
         rooms > 1 & 
         no_meals > 2)

# filters observations with "|" logical operator
# output dataframe satisfies AT LEAST ONE of the specified conditions
filter(interviews, village == "Chirodzo" | village == "Ruaca")

interviews2 <- filter(interviews, village == "Chirodzo")
interviews_ch <- select(interviews2, village:respondent_wall_type)
# This is handy, but can be difficult to read if too many functions are nested, as R evaluates the expression from the inside out (in this case, filtering, then selecting)
interviews_ch <- select(filter(interviews, village == "Chirodzo"),
                        village:respondent_wall_type)

# ctrl + shift + m = %>% 
interviews_ch <- interviews %>%
  filter(village == "Chirodzo") %>%
  select(village:respondent_wall_type)

interviews_ch
    
interviews_ex <- interviews %>% 
                   filter(memb_assoc == "yes") %>% 
                   select(affect_conflicts, liv_count, no_meals)

interviews %>%
  filter(!is.na(memb_assoc)) %>%
  mutate(people_per_room = no_membrs / rooms)

interviews_new <-  interviews %>% 
  mutate(total_meals = no_membrs * no_meals) %>% 
  filter(total_meals > 20) %>% 
  select(village, total_meals)

interviews %>%
  group_by(village) %>%
  summarize(mean_no_membrs = mean(no_membrs))

interviews %>%
  group_by(village, memb_assoc) %>%
  summarize(mean_no_membrs = mean(no_membrs))

interviews %>%
  group_by(village, memb_assoc) %>%
  summarize(mean_no_membrs = mean(no_membrs)) %>%
  ungroup()

interviews %>%
  filter(!is.na(memb_assoc)) %>%
  group_by(village, memb_assoc) %>%
  summarize(mean_no_membrs = mean(no_membrs))

interviews %>%
  filter(!is.na(memb_assoc)) %>%
  group_by(village, memb_assoc) %>%
  summarize(mean_no_membrs = mean(no_membrs),
            min_membrs = min(no_membrs)) %>% 
  arrange(desc(min_membrs))

interviews %>%
  count(village, sort = TRUE)

interviews %>% 
  count(no_meals)

interviews %>% 
  group_by(village) %>% 
  summarize(mean_no_membrs = mean(no_membrs),
            min_no_membrs = min(no_membrs),
            max_no_membrs = max(no_membrs),
            n = n())

library(lubridate)

interviews %>%
  mutate(month = month(interview_date),
         day = day(interview_date),
         year = year(interview_date)) %>%
  group_by(year, month) %>%
  summarize(max_no_membrs = max(no_membrs))

# Reshaping with pivot_wider() and pivot_longer()

interviews %>%
  filter(village == "Chirodzo") %>%
  select(key_ID, village, interview_date, instanceID) %>%
  sample_n(size = 10)

interviews_wide <- interviews %>%
  mutate(wall_type_logical = TRUE) %>%
  pivot_wider(names_from = respondent_wall_type,
              values_from = wall_type_logical,
              values_fill = list(wall_type_logical = FALSE))

interviews_long <- interviews_wide %>%
  pivot_longer(cols = c(burntbricks, cement, muddaub, sunbricks),
               names_to = "respondent_wall_type",
               values_to = "wall_type_logical") %>%
  filter(wall_type_logical) %>%
  select(-wall_type_logical)

interviews_items_owned <- interviews %>%
  separate_rows(items_owned, sep = ";") %>%
  replace_na(list(items_owned = "no_listed_items")) %>%
  mutate(items_owned_logical = TRUE) %>%
  pivot_wider(names_from = items_owned,
              values_from = items_owned_logical,
              values_fill = list(items_owned_logical = FALSE))

nrow(interviews_items_owned)

interviews_items_owned %>%
  filter(bicycle) %>%
  group_by(village) %>%
  count(bicycle)

interviews_items_owned %>%
  mutate(number_items = rowSums(select(., bicycle:car))) %>%
  group_by(village) %>%
  summarize(mean_items = mean(number_items))

interviews_months_lack_food <- interviews %>% 
  separate_rows(months_lack_food,sep = ";") %>% 
  mutate(months_lack_food_logical = TRUE) %>% 
  pivot_wider(names_from = months_lack_food,
              values_from = months_lack_food_logical,
              values_fill = list(months_lack_food_logical = FALSE))

interviews_months_lack_food %>% 
  mutate(number_months = rowSums(select(., Jan:May))) %>% 
  group_by(memb_assoc) %>% 
  filter(memb_assoc == "yes") %>% 
  summarize(mean_month_no_food = mean(number_months))

# Exporting data

interviews_plotting <- interviews %>%
  ## pivot wider by items_owned
  separate_rows(items_owned, sep = ";") %>%
  ## if there were no items listed, changing NA to no_listed_items
  replace_na(list(items_owned = "no_listed_items")) %>%
  mutate(items_owned_logical = TRUE) %>%
  pivot_wider(names_from = items_owned,
              values_from = items_owned_logical,
              values_fill = list(items_owned_logical = FALSE)) %>%
  ## pivot wider by months_lack_food
  separate_rows(months_lack_food, sep = ";") %>%
  mutate(months_lack_food_logical = TRUE) %>%
  pivot_wider(names_from = months_lack_food,
              values_from = months_lack_food_logical,
              values_fill = list(months_lack_food_logical = FALSE)) %>%
  ## add some summary columns
  mutate(number_months_lack_food = rowSums(select(., Jan:May))) %>%
  mutate(number_items = rowSums(select(., bicycle:car)))

write_csv(interviews_plotting, file = "data_output/interviews_plotting.csv")










